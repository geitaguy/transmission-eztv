#!/bin/bash

workdir="/usr/local/var/eztv"
conf=${workdir}/eztv.conf
cookie="${workdir}/eztv.txt"

echo "${dns}"
error() {
  case $1 in
    get)
    echo "Error: curl/wget not found in PATH"
    echo "Install curl via Homebrew:"
    echo
    echo "  brew install curl --with-c-ares"
    exit 1
    ;;
    dns)
    echo "Error: DNS settings not valid"
    echo "Change DNS server to:"
    echo
    echo "  Google: 8.8.8.8"
    exit 1
    ;;
  esac
}

if [[ `/usr/local/opt/curl/bin/curl -V | grep c-ares` ]]; then
  get="curl-c-ares"
  curl="/usr/local/opt/curl/bin/curl"
elif [[ `which wget` ]]; then
  get="wget"
  wget=`which wget`
elif [[ `which curl` ]]; then
  get="curl"
  curl=`which curl`
else
  error get
fi

case $get in
  wget|curl)
  if [[ ! `cat /etc/resolv.conf | grep ${dns}` ]]; then
    error dns
  fi
  ;;
esac

if [[ -f $conf ]]; then
  source $conf
else
  configure
fi

showconfig() {
  if [[ $verbose = "true" ]]; then
    echo "Renderer: ${get}"
    echo "DNS Server: ${dns}"
    echo
    echo "Config:"
    cat ${conf}
    echo
  fi
}

newshows="0"

configure() {
  case $1 in
    url) read -p "Enter new eztv domain:" url
    sed 's_//'
    shift ;;
  esac
  read -p "Enter eztv username:" user
  read -p "Enter eztv password:" pass
  read -p "Enter Transmission host IP/domain:" host
  read -p "Enter Transmission host port:" port
  echo "user=$user" >> $conf
  echo "pass=`echo $pass | base64`" >> $conf
  echo "host=$host" >> $conf
  echo "port=$port" >> $conf
  echo "dns=8.8.8.8" >> $conf
}

login() {
  case $get in
    curl-c-ares)
    ${curl} --dns-servers ${dns} --silent --cookie-jar ${cookie} --data "loginname=$user&password=$pass" $url/login/ -o /dev/null
    ;;
    curl)
    ${curl} --silent --cookie-jar - --data "loginname=$user&password=$pass" $url/login/ -o /dev/null
    ;;

    wget)
    ${wget} -q --save-cookies $cookie --post-data "loginname=$user&password=$pass" $url/login/ -O /dev/null
    ;;
  esac

}

getshows() {
  echo -n "Retrieving new episodes..."
  case $get in
    curl-c-ares)
    ${curl} --dns-servers ${dns} --silent --cookie ${cookie} ${url}/myshows/ -o ${workdir}/myshows.html
    ;;
    curl)
    ${curl} --silent --cookie ${cookie} ${url}/myshows/ -o ${workdir}/myshows.html
    ;;
    wget)
    ${wget} -q --load-cookies $cookie $url/myshows/ -O $workdir/myshows.html
    ;;
  esac
}

addshows() {
  magnetlist=`cat $workdir/myshows.html | grep 720p | grep magnet | cut -f 2 -d '"'`
  if [[ $magnetlist = "" ]]
  then
    echo "No new episodes"
  else
    newshows="1"
    echo "New episodes available:"
    for magnet in $magnetlist
    do
      echo -n "`echo $magnet | sed 's/dn=/#/;s/720p/#/;s/\%20/\ /g;s/\./\ /g' | cut -f 2 -d "#"`"
      echo "...`transmission-remote $host:$port --add \"$magnet\" | cut -f 2 -d '\"'`"
    done
  fi
}

removeshows() {
  torrentlist=`transmission-remote $host:$port --list | grep 100% | cut -c 1-4`
  if [[ ! $torrentlist = "" ]]
  then
    echo
    echo "Removing completed torrents:"
    for torrent in $torrentlist
    do
      echo -n "`transmission-remote 127.0.0.1:9092 --torrent $torrent --info | grep Name | sed 's/: /#/;s/.720p/#/;s/\./\ /g'|cut -f 2 -d '#'`"
      echo "...`transmission-remote $host:$port --torrent $torrent --remove | cut -f 2 -d '\"'`"
    done
  fi
}

markwatched() {
  case $get in
    curl-c-ares)
    ${curl} --dns-servers ${dns} --silent --cookie ${cookie} ${url}/myshows/watched/all/ -o /dev/null
    ;;
    curl)
    ${curl} --silent --cookie ${cookie} ${url}/myshows/watched/all -o /dev/null
    ;;
    wget)
    ${wget} -q --load-cookies $cookie $url/myshows/watched/all/ -O /dev/null
    rm $workdir/myshows.html
    ;;
  esac
}

runall() {
  if [[ ! -d $workdir ]];then
    mkdir -p $workdir
  fi
  if [[ ! -f $cookie ]]; then
    login
  fi
  getshows
  addshows
  markwatched
  removeshows
}

usage () {
  echo "Usage: $9"
}

if [[ $1 ]]; then
  case $1 in
    test)
    shift
    ;;
    -v | --verbose)
    verbose="true"
    showconfig
    runall
    shift
    ;;
    getshows | addshows | markwatched | removeshows | configure)
    $1
    shift
    ;;
    *)
      usage
      exit 1
    ;;
  esac
else
  runall
fi
